{"version":3,"sources":["index.js"],"names":["cardLayout","props","i","raining_chance","key","className","date","max_temperature","min_temperature","summary","name","iconId","icon","Weathercard","location","weather_reports","reports","reports_length","json_reports","JSON","parse","length","rows","push","Ezw","state","startDate","Date","endDate","latitude","longitude","readyToSubmit","status","handleChangeStart","bind","handleChangeEnd","handleLocation","resetLocation","getDateResult","this","setState","json_req","start_date","moment","format","end_date","axios","post","process","then","res","data","loc","lat","lng","label","weather_report","selected","selectsStart","onChange","dateFormat","selectsEnd","ref","el","_geoSuggest","placeholder","initialValue","fixtures","onSuggestSelect","google","maps","LatLng","radius","onClick","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f401c5d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Geosuggest from \"react-geosuggest\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport WeatherIcon from \"react-icons-weather\";\r\n\r\n/*global google*/\r\n\r\nfunction cardLayout(props, i) {\r\n  let raining_chance = \"--\";\r\n  if (props.raining_chance != null) {\r\n    raining_chance = props.raining_chance;\r\n  }\r\n\r\n  return (\r\n    <div key={i}>\r\n      <div className=\"weather_card\">\r\n        <div className=\"weather_info\">\r\n          <div>\r\n            <div className=\"report_item\">Date:</div> {props.date}\r\n          </div>\r\n          <div>\r\n            <div className=\"report_item\">Max Temperature:</div>{\" \"}\r\n            {props.max_temperature}\r\n          </div>\r\n          <div>\r\n            <div className=\"report_item\">Min Temperature:</div>{\" \"}\r\n            {props.min_temperature}\r\n          </div>\r\n          <div>\r\n            <div className=\"report_item\">Summary:</div> {props.summary}\r\n          </div>\r\n          <div>\r\n            <div className=\"report_item\">Chance of rain:</div> {raining_chance}\r\n          </div>\r\n        </div>\r\n        <div className=\"weather_icon\">\r\n          <WeatherIcon name=\"darksky\" iconId={props.icon} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} //cardLayout\r\n\r\nfunction Weathercard(props, location) {\r\n  let weather_reports = props.reports;\r\n\r\n  let reports_length = 0;\r\n  let json_reports = [];\r\n\r\n  if (typeof weather_reports !== \"undefined\") {\r\n    json_reports = JSON.parse(weather_reports);\r\n    reports_length = json_reports.length;\r\n  } //if not undefined\r\n\r\n  var rows = [];\r\n  for (var i = 0; i < reports_length; i++) {\r\n    rows.push(cardLayout(json_reports[i], i));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"location\">{location}</div>\r\n      <div>{rows}</div>\r\n    </div>\r\n  );\r\n} //function Weathercard\r\n\r\nclass Ezw extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      latitude: null,\r\n      longitude: null,\r\n      readyToSubmit: false,\r\n      location: null,\r\n      status: \"Enter date and location...\"\r\n    };\r\n    //bind to make `this` work in the callback\r\n    this.handleChangeStart = this.handleChangeStart.bind(this);\r\n    this.handleChangeEnd = this.handleChangeEnd.bind(this);\r\n    this.handleLocation = this.handleLocation.bind(this);\r\n    this.resetLocation = this.resetLocation.bind(this);\r\n    this.getDateResult = this.getDateResult.bind(this);\r\n  }\r\n\r\n  getDateResult() {\r\n    this.setState({\r\n      status: \"Processing...\"\r\n    });\r\n\r\n    //send to server\r\n    let json_req = {\r\n      latitude: this.state.latitude,\r\n      longitude: this.state.longitude,\r\n      start_date: moment(this.state.startDate).format(\"YYYY-MM-DD\"),\r\n      end_date: moment(this.state.endDate).format(\"YYYY-MM-DD\")\r\n    };\r\n\r\n    axios.post(process.env.REACT_APP_EZW_API, json_req).then(res => {\r\n      this.setState({\r\n        status: Weathercard(res.data, this.state.location)\r\n      });\r\n    }); //axios\r\n  } //getDateResult\r\n\r\n  handleChangeStart(date) {\r\n    if (date > this.state.endDate) {\r\n      this.setState({\r\n        endDate: date\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  } //handleChangeStart\r\n\r\n  handleChangeEnd(date) {\r\n    if (date < this.state.startDate) {\r\n      this.setState({\r\n        startDate: date\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  } //handleChangeEnd\r\n\r\n  handleLocation(loc) {\r\n    if (typeof loc !== \"undefined\") {\r\n      this.setState({\r\n        latitude: loc.location.lat,\r\n        longitude: loc.location.lng,\r\n        location: loc.label,\r\n        readyToSubmit: true,\r\n        status: \"Ready to Send\"\r\n      });\r\n    }\r\n  }\r\n\r\n  resetLocation() {\r\n    this.setState({\r\n      latitude: null,\r\n      longitude: null,\r\n      readyToSubmit: false,\r\n      status: \"Enter date and location...\"\r\n    });\r\n  } //handleChangeEnd\r\n\r\n  render() {\r\n    let weather_report;\r\n    weather_report = this.state.status;\r\n\r\n    var fixtures = [\r\n      {\r\n        label: \"Denver, CO, USA\",\r\n        location: { lat: 39.742043, lng: -104.9903 }\r\n      },\r\n      {\r\n        label: \"Ho Chi Minh City, Vietnam\",\r\n        location: { lat: 10.762622, lng: 106.660172 }\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"comp_ezw\">\r\n          <div>Date range:</div>\r\n          <DatePicker\r\n            selected={this.state.startDate}\r\n            selectsStart\r\n            startDate={this.state.startDate}\r\n            endDate={this.state.endDate}\r\n            onChange={this.handleChangeStart}\r\n            dateFormat=\"dd-MM-yyyy\"\r\n            className=\"ezw_datepicker\"\r\n          />\r\n          <div className=\"ezw_to\">TO</div>\r\n          <DatePicker\r\n            selected={this.state.endDate}\r\n            selectsEnd\r\n            startDate={this.state.startDate}\r\n            endDate={this.state.endDate}\r\n            onChange={this.handleChangeEnd}\r\n            dateFormat=\"dd-MM-yyyy\"\r\n            className=\"ezw_datepicker\"\r\n          />\r\n        </div>\r\n        <div className=\"comp_ezw\">\r\n          <div>Location:</div>\r\n          <Geosuggest\r\n            ref={el => (this._geoSuggest = el)}\r\n            placeholder=\"Start typing!\"\r\n            initialValue=\"Denver\"\r\n            fixtures={fixtures}\r\n            onSuggestSelect={this.handleLocation}\r\n            onChange={this.resetLocation}\r\n            location={new google.maps.LatLng(39.742043, -104.9903)}\r\n            radius=\"20\"\r\n          />\r\n        </div>\r\n        <div className=\"comp_ezw\">\r\n          <button\r\n            onClick={this.getDateResult}\r\n            disabled={!this.state.readyToSubmit}\r\n            className=\"button_ezw\"\r\n          >\r\n            SUBMIT\r\n          </button>\r\n        </div>\r\n        <div className=\"report_ezw\">{weather_report}</div>\r\n      </div>\r\n    );\r\n  } //render\r\n} //ezw\r\n\r\nReactDOM.render(<Ezw />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}